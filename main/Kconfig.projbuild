menu "Gravity Configuration"

    config FLIPPER
        bool "Condense output for Flipper Zero screen size"
        default n
        help
            As a console application, Gravity has been developed around a traditional
            80x25 character terminal. Flipper Zero has a 20x5 character screen; this
            option condenses and reduces output from Gravity to be more amenable
            to use on Flipper Zero.

    config SUPPORT_C6
        bool "Support ESP32-C6 by removing features it does not yet support"
        default n
        help
            Gravity was initially written targetting the ESP32-C6, however this plan
            had to be abandoned when I learnt that ESP-IDF did not yet completely
            support bluetooth on ESP32-C6. This features removes bluetooth support
            from Gravity.
            
    config DEFAULT_HOP_MILLIS
        int "Default dwell time for most features when channel hopping (milliseconds)"
        default 500
        help
            This specifies the default length of time Gravity should remain on a
            wireless channel before progressing to the next channel when
            channel hopping is enabled, for all features except Mana and
            handshake capture (not yet implemented).

    config DEFAULT_MANA_HOP_MILLIS
        int "Default dwell time for larger features when channel hopping (milliseconds)"
        default 5000
        help
            The specifies the default length of time Gravity should remain on a
            wireless channel before progressing to the next channel when channel
            hopping is enabled, for the Mana attack and (when implemented)
            handshake capture.

    config DEFAULT_ATTACK_MILLIS
        int "Default time between packets during an attack (milliseconds)"
        default 5
        help
            To avoid causing too much traffic/chaos on a network during attacks,
            the rate at which deauth packets are sent can be throttled using this
            setting. Gravity will pause the specified number of milliseconds in between
            each packet during an attack.

    config MALFORMED_FROM
        int "Number of (valid) characters in an SSID being subject to Malformed Fuzzing"
        default 16
        help
            The Malformed Fuzz attack starts with a wireless packet containing a regular
            SSID. This SSID is then manipulated in various ways to see how the wireless
            router responds. This option specifies the length of this initial SSID. For
            reference, the maximum length of an SSID is 32 bytes.

    config DEFAULT_SCRAMBLE_WORDS
        bool "Use random characters, not random words, when generating SSIDs"
        default n
        help
            beacon RANDOM, beacon INFINITE and all FUZZ commands include the generation
            of random SSIDs. By default these SSIDs use a sequence of words, drawn from
            words.h. Select this option to use random characters rather than random words.

    config MIN_ATTACK_MILLIS
        int "Minimum time between attack packets for sensitivy processes (milliseconds)."
        default 50
        help
            The beacon attack sends beacon frame too quickly to be observed by Wireshark. I'm
            unclear whether the culprit is the sender or receiver, but the situation improves
            significants by introducing a small delay. A single tick works well enough; this
            option specifies the minimum number of milliseconds for such attacks.
            This option applies to the BEACON command, excluding the infinite attack mode.

    config DEBUG
        bool "Enable debugging output"
        default y
        help
            This option displays additional logging information to aid in the identification
            and resolution of issues.
        
    config DEBUG_VERBOSE
        bool "Enable verbose debugging output"
        default n
        help
            This option displays an excessive amount of additional logging information.

    config CONSOLE_STORE_HISTORY
        bool "Store command history in flash"
        default y
        help
            Linenoise line editing library provides functions to save and load
            command history. If this option is enabled, initalizes a FAT filesystem
            and uses it to store command history.

    config CONSOLE_MAX_COMMAND_LINE_LENGTH
        int "Maximum command line length"
        default 1024
        help
            This value marks the maximum length of a single command line. Once it is
            reached, no more characters will be accepted by the console.

endmenu
